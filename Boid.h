//****************************************************************************
//
//
//
//****************************************************************************



#ifndef __BOID_H__
#define __BOID_H__


// ===========================================================================
//                                  Libraries
// ===========================================================================
#include <cstdio>
#include <cstdlib>



// ===========================================================================
//                                Project Files
// ===========================================================================
#include "Agent.h"
#include "Obstacle.h"
#include "Predateur.h"



// ===========================================================================
//                              Class declarations
// ===========================================================================






class Boid
{
  public :
    
    // =======================================================================
    //                                 Enums
    // =======================================================================
    
    // =======================================================================
    //                               Constructors
    // =======================================================================
    Boid(void);
    Boid(const Boid &model);

    // =======================================================================
    //                                Destructor
    // =======================================================================
    virtual ~Boid(void);

    // =======================================================================
    //                            Accessors: getters
    // =======================================================================
    int GetN (void) const;
    int GetNo(void) const;
    int GetNp(void) const;
    Agent GetAgent(int pos) const;
    Obstacle GetObstacle(int pos) const;
    Predateur GetPredateur(int pos) const;
    Agent* GetPop(void) const;

    // =======================================================================
    //                            Accessors: setters
    // =======================================================================

    // =======================================================================
    //                                Operators
    // =======================================================================

    // =======================================================================
    //                              Public Methods
    // =======================================================================
    void updateposBoid(void);
    void affiche(void);
    void speed(int pos);

    // =======================================================================
    //                             Public Attributes
    // =======================================================================





  protected :

    // =======================================================================
    //                            Forbidden Constructors
    // =======================================================================
    /*Boid(void)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/
    /*Boid(const Boid &model)
    {
      printf("%s:%d: error: call to forbidden constructor.\n", __FILE__, __LINE__);
      exit(EXIT_FAILURE);
    };*/


    // =======================================================================
    //                              Protected Methods
    // =======================================================================

    // =======================================================================
    //                             Protected Attributes
    // =======================================================================
    Agent* pop; // Population of agents
    int N; // Length of population
    int No; // Number of Obstacle
    Obstacle* obs; // Obstacle 
    int Np; // Number of predator
    Predateur* pred; // Population predateur
};


// ===========================================================================
//                              Getters' definitions
// ===========================================================================

// ===========================================================================
//                              Setters' definitions
// ===========================================================================

// ===========================================================================
//                             Operators' definitions
// ===========================================================================

// ===========================================================================
//                          Inline functions' definition
// ===========================================================================


#endif // __BOID_H__

